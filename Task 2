import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Load your movie dataset here
df = pd.read_csv('movie_dataset.csv')
# Display basic information about the dataset
print(df.info())

# Handle missing values (e.g., fill or drop)
df.dropna(subset=['director', 'actors', 'genre', 'rating'], inplace=True)
selected_features = ['genre', 'director', 'actors']
X = df[selected_features]
y = df['rating']
# Define transformers for preprocessing
preprocessor = ColumnTransformer(
    transformers=[
        ('genre', OneHotEncoder(), ['genre']),
        ('director', OneHotEncoder(), ['director']),
        ('actors', OneHotEncoder(), ['actors'])
    ],
    remainder='passthrough'
)

# Create a pipeline with preprocessing and regression model
pipeline = Pipeline(steps=[('preprocessor', preprocessor), ('regressor', LinearRegression())])
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
pipeline.fit(X_train, y_train)
y_pred = pipeline.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)
# Example data for prediction
new_movie = pd.DataFrame({
    'genre': ['Action'],
    'director': ['James Cameron'],
    'actors': ['Leonardo DiCaprio, Kate Winslet']
})

# Make predictions
predicted_rating = pipeline.predict(new_movie)
print("Predicted Rating:", predicted_rating)
